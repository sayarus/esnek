= Esnek
_UNDER HEAVY DEVELOPMENT IN APRIL 2011_

_Esnek_ provides a quick Ruby interface for JSON  APIs, such as _ElasticSearch_ (http://www.elasticsearch.org); a scalable, fast, distributed, 
highly-available, real time search RESTful search engine communicating by JSON over HTTP, based on _Lucene_ (http://lucene.apache.org). 

== Installation:

  gem install esnek

For the installation of elasticsearch please follow the guides at http://www.elasticsearch.org
  
== Usage 

=== ElasticSearch

To use esnek just instantiate Esnek with the base API URL.
  require 'esnek'  
  es = Esnek.new('http://localhost:9200')

Make a chained method call where each method is a directory in the URL for the JSON API.Your method chain must end with get, post, put or delete.
For example assuming elastic search is running at port 9200 on your localhost, the following code gets the state of the cluster.

  #curl -XGET 'http://localhost:9200/_cluster/state'
  es._cluster.state.get


You may pass options as a hash parameter for each directory in your URL.
  #curl -XGET http://localhost:9200/twitter/tweet/_search?q=user:kimchy
  es.twitter.tweet._search(:q => 'good').get

For literals such as 1,  use __1; esnek simply omits __ (2 underscores)
  #curl -XGET 'http://localhost:9200/twitter/tweet/1'
  es.twitter.tweet.__1.get

In order to post a JSON data simply pass a block (do...end)
  #curl -XPUT http://localhost:9200/twitter/tweet/2 -d '{
  # "user": "kimchy", "post_date": "2009-11-15T14:12:12", "message": "You know, for Search"
  # }'
  es.twitter.tweet.__2.put do
    {"user" => "alper", "post_date" => "2011-11-15T14:12:12", "message" => "For esnek"}
  end

===  Google Translate API
  gapi = Esnek.new('https://www.googleapis.com')
  gapi.language.translate.v2.get :q => "hello world", :source => :en, :target => :tr, :key => INSERT_YOUR_KEY

===  Google URL Shortener
  gapi = Esnek.new('https://www.googleapis.com')
  res = gapi.urlshortener.v1.url.post {{:longUrl => "http://www.sayarus.com/"}}
  puts res.longURL # Use res.table[:id] instead of res.id, because id method already exist for Object

== Proxy

Esnek will use the proxy specified by RestClient.proxy:

  RestClient.proxy = "http://proxy.example.com/"
or the proxy url is set in an environment variable   
  RestClient.proxy = ENV['http_proxy']

== Logging

To enable logging you can

* set RestClient.log with a ruby Logger
* or set an environment variable to avoid modifying the code (in this case you can use a file name, "stdout" or "stderr"):

   $ RESTCLIENT_LOG=stdout path/to/my/program
   $ RESTCLIENT_LOG=stdout irb


== Notes

Esnek was initially developed using Redcar under Ubuntu Linux 10.10.
